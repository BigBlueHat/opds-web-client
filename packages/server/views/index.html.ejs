<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>OPDS Browser</title>
    <% if (process.env.NODE_ENV === "development") { %>
    <script src="http://localhost:8090/webpack-dev-server.js"></script>
    <% } %>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <style>
      body { margin: 0; }
    </style>
  </head>
  <body>
    <div id="opds-browser"></div>
    <% if (process.env.NODE_ENV === "development") { %>
    <script src="http://localhost:8090/dist/opds-browser.js"></script>
    <% } else { %>
    <script src="/opds-browser.js"></script>
    <% } %>
    <script>
      var getParam = function(name) {
        var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);
        return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
      };

      var serializeParams = function(params) {
        if (Object.keys(params).length === 0) {
          return "";
        }

        return "?" + Object.keys(params).reduce(function(keys, key) {
          if (params[key]) {
            keys.push(key + "=" + encodeURIComponent(params[key]));
          }
          return keys;
        }, []).join("&");
      };

      var historyArgs = function(collectionUrl, bookUrl) {
        var params = {
          collection: collectionUrl,
          book: bookUrl
        };

        return [params, "", serializeParams(params)];
      }

      window.onpopstate = function(event) {
        var collection = null,
            book = null;

        if (event.state) {
          collection = event.state.collection || null;
          book = event.state.book || null;
        }

        currentCollectionUrl = collection;
        currentBookUrl = book;

        browser.render(collection, book);
      };

      var pushHistory = function(collectionUrl, bookUrl) {
        window.history.pushState.apply(window.history, historyArgs(collectionUrl, bookUrl));
      };

      var onNavigate = function(collectionUrl, bookUrl, isTopLevel) {
        if (collectionUrl !== currentCollectionUrl || bookUrl !== currentBookUrl) {
          currentCollectionUrl = collectionUrl;
          currentBookUrl = bookUrl;
          pushHistory(collectionUrl, bookUrl);
          browser.render(collectionUrl, bookUrl, isTopLevel);
        }
      };

      var currentCollectionUrl, currentBookUrl;
      var title = document.title;
      var browser;

      currentCollectionUrl = getParam("collection");
      currentBookUrl = getParam("book");

      browser = new OPDSBrowserApp({
        headerTitle: "OPDS Browser",
        collectionUrl: currentCollectionUrl,
        bookUrl: currentBookUrl,
        proxyUrl: "/proxy",
        onNavigate: onNavigate,
        pathFor: function(collectionUrl, bookUrl) {
          return serializeParams({collection: collectionUrl, book: bookUrl});
        },
        pageTitleTemplate: function(collectionTitle, bookTitle) {
          var details = bookTitle || collectionTitle;
          return title + (details ? " - " + details : "");
        }
      }, "opds-browser");

      if (currentCollectionUrl || currentBookUrl) {
        window.history.replaceState.apply(window.history, historyArgs(currentCollectionUrl, currentBookUrl));
      }
    </script>
  </body>
</html>
